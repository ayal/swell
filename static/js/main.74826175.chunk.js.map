{"version":3,"sources":["App.tsx","index.tsx"],"names":["DayTimeData","localTimestamp","wind","swell","date","moment","add","windclass","speed","swellclass","components","combined","height","className","format","toString","padStart","toFixed","DayData","cal","values","map","x","App","React","data","setData","useEffect","a","fetch","res","json","load","rootElement","document","getElementById","render"],"mappings":"2LAgCMA,G,MAAc,EAAGC,iBAAgBC,OAAMC,YAC3C,IAAMC,EAAOC,IAAwB,IAAjBJ,GAAuBK,KAAK,EAAG,SAC7CC,EAAYL,EAAKM,MAAQ,GAAK,SAAW,QACzCC,EACJN,EAAMO,WAAWC,SAASC,OAAS,GAAM,UAAY,QACvD,OACE,uBAAKC,UAAS,oBAAeN,EAAf,YAA4BE,IACxC,2BAAML,EAAKU,OAAO,UAClB,oCAAYZ,EAAKM,MAAMO,WAAWC,SAAS,EAAG,MAC9C,qCAAab,EAAMO,WAAWC,SAASC,OAAOK,QAAQ,OAKtDC,EAAU,EAAGC,MAAKC,YAEpB,uBAAKP,UAAU,YACb,2BAAMM,GACN,uBAAKN,UAAU,aACZO,EAAOC,IAAKC,GACJ,gBAACtB,EAAgBsB,MAOnB,SAASC,IAAO,IAAD,EACJC,WAA0B,IADtB,mBACrBC,EADqB,KACfC,EADe,KAY5B,OATAC,oBAAU,MACE,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,2CADb,cACLC,EADK,gBAEQA,EAAIC,OAFZ,OAELA,EAFK,OAGXL,EAAQK,GAHG,2CAAH,qDAKVC,IACC,IAGD,uBAAKnB,UAAU,OAAf,OACGY,QADH,IACGA,OADH,EACGA,EAAMJ,IAAKC,GACH,gBAACJ,EAAYI,KCrE5B,IAAMW,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAACb,EAAD,MAASU,I","file":"static/js/main.74826175.chunk.js","sourcesContent":["import moment from \"moment\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport \"./styles.css\";\n\ninterface IWind {\n  speed: number;\n}\n\ninterface ICombined {\n  height: number;\n}\n\ninterface IComponents {\n  combined: ICombined;\n}\n\ninterface ISwell {\n  components: IComponents;\n}\n\ninterface DayTime {\n  localTimestamp: number;\n  wind: IWind;\n  swell: ISwell;\n}\n\ninterface DayData {\n  cal: string;\n  values: DayTime[];\n}\n\nconst DayTimeData = ({ localTimestamp, wind, swell }: DayTime) => {\n  const date = moment(localTimestamp * 1000).add(-3, \"hours\");\n  const windclass = wind.speed < 10 ? \"nowind\" : \"windy\";\n  const swellclass =\n    swell.components.combined.height < 0.4 ? \"noswell\" : \"swell\";\n  return (\n    <div className={`time-data ${windclass} ${swellclass}`}>\n      <div>{date.format(\"HH:mm\")}</div>\n      <div>Wind: {wind.speed.toString().padStart(2, \"0\")}</div>\n      <div>Swell: {swell.components.combined.height.toFixed(1)}</div>\n    </div>\n  );\n};\n\nconst DayData = ({ cal, values }: DayData) => {\n  return (\n    <div className=\"day-data\">\n      <div>{cal}</div>\n      <div className=\"day-times\">\n        {values.map((x) => {\n          return <DayTimeData {...x} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default function App() {\n  const [data, setData] = React.useState<DayData[]>([]);\n  \n  useEffect(() => {\n    const load = async () => {\n      const res = await fetch(\"https://plattta.com/_functions/forecast\");\n      const json = await res.json();\n      setData(json);\n    };\n    load();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {data?.map((x) => {\n        return <DayData {...x} />;\n      })}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}